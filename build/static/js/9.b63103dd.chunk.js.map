{"version":3,"sources":["components/ContactUs.js"],"names":["apiUrl","apiKey","process","style","padding","background","textAlign","button","margin","ContactUs","props","componentWillUnmount","mounted","componentWillMount","handleChange","event","target","option","value","name","setState","handleSubmit","e","preventDefault","loading","state","msg","email","length","indexOf","post","method","headers","key","then","res","data","status","sent","error","catch","message","undefined","bind","errors","sm","className","this","onSubmit","for","type","id","onChange","placeholder","color","PureComponent"],"mappings":"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","file":"static/js/9.b63103dd.chunk.js","sourcesContent":["import React, { PureComponent, Fragmwnt } from 'react'\r\nimport { post } from 'axios'\r\nimport { Button, Form, Input, Label, Col, Row } from 'reactstrap'\r\n\r\nconst apiUrl = 'https://mail.talaikis.com'\r\nconst apiKey = process.env.REACT_APP_API_KEY\r\n\r\nconst style = {\r\n  padding: '10%',\r\n  background: 'white',\r\n  textAlign: 'center'\r\n}\r\n\r\nconst button = {\r\n  margin: '1%'\r\n}\r\n\r\nexport default class ContactUs extends PureComponent {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      sent: false,\r\n      email: '',\r\n      name: '',\r\n      msg: '',\r\n      error: undefined,\r\n      loading: false\r\n    }\r\n    this.mounted = false\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.handleChange = this.handleChange.bind(this)\r\n  }\r\n\r\n  componentWillUnmount = () => {\r\n    this.mounted = false\r\n  }\r\n\r\n  componentWillMount = () => {\r\n    this.mounted = true\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { target, option } = event\r\n    const { value, name } = target\r\n\r\n    if (this.mounted) {\r\n      (option) ? this.setState({\r\n        [name]: option.value ? option.value : ''\r\n      }) : this.setState({\r\n        [name]: value\r\n      })\r\n    }\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.setState({ loading: true })\r\n    const name = this.state.name\r\n    const msg = this.state.msg\r\n    const email = this.state.email\r\n    if (name.length >= 0 && msg.length >= 0 && email.indexOf('@')  > -1) {\r\n      post(`${apiUrl}/contactus`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n        email: email,\r\n        msg: msg,\r\n        name: name,\r\n        key: apiKey\r\n      }).then((res) => {\r\n        if (res.data.status === 'sent') {\r\n          this.setState({ sent: true })\r\n        } else {\r\n          this.setState({ sent: false, error: res.data.status })\r\n        }\r\n      }).catch((error) => {\r\n        this.setState({ error:  error.message })\r\n      })\r\n    } else {\r\n      this.setState({ error: 'Not all required information entered.' })\r\n    }\r\n    this.setState({ loading: false })\r\n  }\r\n\r\n  render() {\r\n    const errors = (\r\n      <Row>\r\n          <Col sm={4}>\r\n          </Col>\r\n          <Col sm={4}>\r\n            <h1 className=\"display-4\">\r\n              { this.state.error ? this.state.error : `Thank you, email is sent, we will answer you as soon as possible.` }\r\n            </h1>\r\n          </Col>\r\n          <Col sm={4}>\r\n          </Col>\r\n        </Row>\r\n    )\r\n\r\n    return (\r\n      <div style={style}>\r\n        <h1 className=\"display-4\">\r\n          Contact Us\r\n        </h1>\r\n        { !this.state.sent ?\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <p className=\"lead\">Simply drop us a note, we definitely will be able to help you.</p>\r\n          <Row>\r\n            <Col sm={4}>\r\n            </Col>\r\n            <Col sm={4}>\r\n              <Label for=\"name\" sm={3}>Your Name:</Label>\r\n              <Input type=\"name\" name=\"name\" id='name' onChange={this.handleChange} />\r\n            </Col>\r\n            <Col sm={4}>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={4}>\r\n            </Col>\r\n            <Col sm={4}>\r\n              <Label for=\"email\" sm={3}>Email:</Label>\r\n              <Input type=\"email\" name=\"email\" placeholder='meil@dot.com' id='email' onChange={this.handleChange} />\r\n            </Col>\r\n            <Col sm={4}>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col sm={4}>\r\n            </Col>\r\n            <Col sm={4}>\r\n              <Label for=\"msg\" sm={3}>Message:</Label>\r\n              <Input type=\"textarea\" name=\"msg\" id=\"msg\" onChange={this.handleChange} />\r\n            </Col>\r\n            <Col sm={4}>\r\n            </Col>\r\n          </Row>\r\n          { !this.state.loading ? <Button color=\"primary\" style={button}>Submit</Button> : <Fragmwnt>Working...</Fragmwnt> }\r\n        </Form>\r\n        : errors }\r\n        { this.state.error ? this.state.error : null }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n"],"sourceRoot":""}